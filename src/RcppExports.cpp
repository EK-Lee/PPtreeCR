// This file was generated by Rcpp::compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// NormalizeD
NumericMatrix NormalizeD(NumericMatrix rawdata);
RcppExport SEXP PPtreeCR_NormalizeD(SEXP rawdataSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< NumericMatrix >::type rawdata(rawdataSEXP );
        NumericMatrix __result = NormalizeD(rawdata);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// NormalizeProjV
NumericVector NormalizeProjV(NumericVector proj);
RcppExport SEXP PPtreeCR_NormalizeProjV(SEXP projSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< NumericVector >::type proj(projSEXP );
        NumericVector __result = NormalizeProjV(proj);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// FindMaxID
int FindMaxID(NumericVector X);
RcppExport SEXP PPtreeCR_FindMaxID(SEXP XSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< NumericVector >::type X(XSEXP );
        int __result = FindMaxID(X);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// LDAindex1
double LDAindex1(IntegerVector projclass, NumericMatrix projdata);
RcppExport SEXP PPtreeCR_LDAindex1(SEXP projclassSEXP, SEXP projdataSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< IntegerVector >::type projclass(projclassSEXP );
        Rcpp::traits::input_parameter< NumericMatrix >::type projdata(projdataSEXP );
        double __result = LDAindex1(projclass, projdata);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// LDAindex2
double LDAindex2(IntegerVector projclass, NumericMatrix projdata);
RcppExport SEXP PPtreeCR_LDAindex2(SEXP projclassSEXP, SEXP projdataSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< IntegerVector >::type projclass(projclassSEXP );
        Rcpp::traits::input_parameter< NumericMatrix >::type projdata(projdataSEXP );
        double __result = LDAindex2(projclass, projdata);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// Lpindex
double Lpindex(IntegerVector projclass, NumericMatrix projdata, int r);
RcppExport SEXP PPtreeCR_Lpindex(SEXP projclassSEXP, SEXP projdataSEXP, SEXP rSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< IntegerVector >::type projclass(projclassSEXP );
        Rcpp::traits::input_parameter< NumericMatrix >::type projdata(projdataSEXP );
        Rcpp::traits::input_parameter< int >::type r(rSEXP );
        double __result = Lpindex(projclass, projdata, r);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// PDAindex1
double PDAindex1(IntegerVector projclass, NumericMatrix projdata, double lambda);
RcppExport SEXP PPtreeCR_PDAindex1(SEXP projclassSEXP, SEXP projdataSEXP, SEXP lambdaSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< IntegerVector >::type projclass(projclassSEXP );
        Rcpp::traits::input_parameter< NumericMatrix >::type projdata(projdataSEXP );
        Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP );
        double __result = PDAindex1(projclass, projdata, lambda);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// PDAindex2
double PDAindex2(IntegerVector projclass, NumericMatrix projdata, double lambda);
RcppExport SEXP PPtreeCR_PDAindex2(SEXP projclassSEXP, SEXP projdataSEXP, SEXP lambdaSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< IntegerVector >::type projclass(projclassSEXP );
        Rcpp::traits::input_parameter< NumericMatrix >::type projdata(projdataSEXP );
        Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP );
        double __result = PDAindex2(projclass, projdata, lambda);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// GINIindex1D
double GINIindex1D(IntegerVector projclass, NumericVector projdata);
RcppExport SEXP PPtreeCR_GINIindex1D(SEXP projclassSEXP, SEXP projdataSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< IntegerVector >::type projclass(projclassSEXP );
        Rcpp::traits::input_parameter< NumericVector >::type projdata(projdataSEXP );
        double __result = GINIindex1D(projclass, projdata);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// ENTROPYindex1D
double ENTROPYindex1D(IntegerVector projclass, NumericVector projdata);
RcppExport SEXP PPtreeCR_ENTROPYindex1D(SEXP projclassSEXP, SEXP projdataSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< IntegerVector >::type projclass(projclassSEXP );
        Rcpp::traits::input_parameter< NumericVector >::type projdata(projdataSEXP );
        double __result = ENTROPYindex1D(projclass, projdata);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// PPoptimize1D
List PPoptimize1D(IntegerVector origclass, NumericMatrix origdata, std::string method, int r = 1, double lambda = 0, double TOL = 0.00001, int maxiter = 5000);
RcppExport SEXP PPtreeCR_PPoptimize1D(SEXP origclassSEXP, SEXP origdataSEXP, SEXP methodSEXP, SEXP rSEXP, SEXP lambdaSEXP, SEXP TOLSEXP, SEXP maxiterSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< IntegerVector >::type origclass(origclassSEXP );
        Rcpp::traits::input_parameter< NumericMatrix >::type origdata(origdataSEXP );
        Rcpp::traits::input_parameter< std::string >::type method(methodSEXP );
        Rcpp::traits::input_parameter< int >::type r(rSEXP );
        Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP );
        Rcpp::traits::input_parameter< double >::type TOL(TOLSEXP );
        Rcpp::traits::input_parameter< int >::type maxiter(maxiterSEXP );
        List __result = PPoptimize1D(origclass, origdata, method, r, lambda, TOL, maxiter);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// PPoptimizeqD
List PPoptimizeqD(IntegerVector origclass, NumericMatrix origdata, std::string method, int q, int r = 1, double lambda = 0, double TOL = 0.00001, int maxiter = 5000);
RcppExport SEXP PPtreeCR_PPoptimizeqD(SEXP origclassSEXP, SEXP origdataSEXP, SEXP methodSEXP, SEXP qSEXP, SEXP rSEXP, SEXP lambdaSEXP, SEXP TOLSEXP, SEXP maxiterSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< IntegerVector >::type origclass(origclassSEXP );
        Rcpp::traits::input_parameter< NumericMatrix >::type origdata(origdataSEXP );
        Rcpp::traits::input_parameter< std::string >::type method(methodSEXP );
        Rcpp::traits::input_parameter< int >::type q(qSEXP );
        Rcpp::traits::input_parameter< int >::type r(rSEXP );
        Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP );
        Rcpp::traits::input_parameter< double >::type TOL(TOLSEXP );
        Rcpp::traits::input_parameter< int >::type maxiter(maxiterSEXP );
        List __result = PPoptimizeqD(origclass, origdata, method, q, r, lambda, TOL, maxiter);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// PPoptimizeAnnealqD
List PPoptimizeAnnealqD(IntegerVector origclass, NumericMatrix origdata, std::string method, int q, int r = 1, double lambda = 0, double TOL = 0.001, int maxiter = 500000, double energy = 0.01, double cooling = 0.999);
RcppExport SEXP PPtreeCR_PPoptimizeAnnealqD(SEXP origclassSEXP, SEXP origdataSEXP, SEXP methodSEXP, SEXP qSEXP, SEXP rSEXP, SEXP lambdaSEXP, SEXP TOLSEXP, SEXP maxiterSEXP, SEXP energySEXP, SEXP coolingSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< IntegerVector >::type origclass(origclassSEXP );
        Rcpp::traits::input_parameter< NumericMatrix >::type origdata(origdataSEXP );
        Rcpp::traits::input_parameter< std::string >::type method(methodSEXP );
        Rcpp::traits::input_parameter< int >::type q(qSEXP );
        Rcpp::traits::input_parameter< int >::type r(rSEXP );
        Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP );
        Rcpp::traits::input_parameter< double >::type TOL(TOLSEXP );
        Rcpp::traits::input_parameter< int >::type maxiter(maxiterSEXP );
        Rcpp::traits::input_parameter< double >::type energy(energySEXP );
        Rcpp::traits::input_parameter< double >::type cooling(coolingSEXP );
        List __result = PPoptimizeAnnealqD(origclass, origdata, method, q, r, lambda, TOL, maxiter, energy, cooling);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// SPSoptimize1D
List SPSoptimize1D(IntegerVector origclass, NumericMatrix origdata, std::string method, int r = 1, double lambda = 0.7, int maxiter = 100, int maxN = 50);
RcppExport SEXP PPtreeCR_SPSoptimize1D(SEXP origclassSEXP, SEXP origdataSEXP, SEXP methodSEXP, SEXP rSEXP, SEXP lambdaSEXP, SEXP maxiterSEXP, SEXP maxNSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< IntegerVector >::type origclass(origclassSEXP );
        Rcpp::traits::input_parameter< NumericMatrix >::type origdata(origdataSEXP );
        Rcpp::traits::input_parameter< std::string >::type method(methodSEXP );
        Rcpp::traits::input_parameter< int >::type r(rSEXP );
        Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP );
        Rcpp::traits::input_parameter< int >::type maxiter(maxiterSEXP );
        Rcpp::traits::input_parameter< int >::type maxN(maxNSEXP );
        List __result = SPSoptimize1D(origclass, origdata, method, r, lambda, maxiter, maxN);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// SPSoptimizeqD
List SPSoptimizeqD(IntegerVector origclass, NumericMatrix origdata, std::string method, int q, int r = 1, double lambda = 0.7, int maxiter = 100, int maxN = 50);
RcppExport SEXP PPtreeCR_SPSoptimizeqD(SEXP origclassSEXP, SEXP origdataSEXP, SEXP methodSEXP, SEXP qSEXP, SEXP rSEXP, SEXP lambdaSEXP, SEXP maxiterSEXP, SEXP maxNSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< IntegerVector >::type origclass(origclassSEXP );
        Rcpp::traits::input_parameter< NumericMatrix >::type origdata(origdataSEXP );
        Rcpp::traits::input_parameter< std::string >::type method(methodSEXP );
        Rcpp::traits::input_parameter< int >::type q(qSEXP );
        Rcpp::traits::input_parameter< int >::type r(rSEXP );
        Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP );
        Rcpp::traits::input_parameter< int >::type maxiter(maxiterSEXP );
        Rcpp::traits::input_parameter< int >::type maxN(maxNSEXP );
        List __result = SPSoptimizeqD(origclass, origdata, method, q, r, lambda, maxiter, maxN);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// TRIBESoptimize1D
List TRIBESoptimize1D(IntegerVector origclass, NumericMatrix origdata, std::string method, int r, double lambda, int maxiter, double TOL);
RcppExport SEXP PPtreeCR_TRIBESoptimize1D(SEXP origclassSEXP, SEXP origdataSEXP, SEXP methodSEXP, SEXP rSEXP, SEXP lambdaSEXP, SEXP maxiterSEXP, SEXP TOLSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< IntegerVector >::type origclass(origclassSEXP );
        Rcpp::traits::input_parameter< NumericMatrix >::type origdata(origdataSEXP );
        Rcpp::traits::input_parameter< std::string >::type method(methodSEXP );
        Rcpp::traits::input_parameter< int >::type r(rSEXP );
        Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP );
        Rcpp::traits::input_parameter< int >::type maxiter(maxiterSEXP );
        Rcpp::traits::input_parameter< double >::type TOL(TOLSEXP );
        List __result = TRIBESoptimize1D(origclass, origdata, method, r, lambda, maxiter, TOL);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
